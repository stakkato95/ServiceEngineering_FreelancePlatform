plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.2"
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

version = "0.1"
group = "com.stakkato95.freelance"

jib {
    from {
        image = "openjdk:17.0.2-jdk"
    }
    to {
        image = "docker.io/stakkato95/freelance-platform"
        tags = [version, 'latest']
    }
    container {
        mainClass = "${group}.Application"
        jvmFlags = ["-Xms256m", '-Xdebug']
        ports = ['80']
        volumes = ['/data']
//        environment = [
//                'VERSION': version,
//                'DATA_DIR': '/data',
//                'APPLICATION_PORT' : '80',
//                'DEVELOPMENT_MODE' : 'false'
//        ]
    }
}

repositories {
    mavenCentral()
}

ext {
    micronautVersion = '3.4.2'
    lombokVersion = '1.18.22'
    mapstructVersion = '1.5.0.RC1'
    junitVersion = '5.7.2'
    testcontainersVersion = '1.16.2'
}

dependencies {
    //micronaut core
    implementation "io.micronaut:micronaut-inject:$micronautVersion"
    implementation "io.micronaut:micronaut-validation:$micronautVersion"
    implementation "io.micronaut:micronaut-http-client:$micronautVersion"
    implementation "io.micronaut:micronaut-http-server-netty:$micronautVersion"
    implementation "io.micronaut:micronaut-jackson-databind:$micronautVersion"
    implementation "io.micronaut:micronaut-runtime:$micronautVersion"
    implementation "io.micronaut:micronaut-management:$micronautVersion"
    implementation "io.micronaut:micronaut-inject-java:$micronautVersion"

    //persistence
    implementation 'io.micronaut.data:micronaut-data-hibernate-jpa:3.3.0'
    implementation 'io.micronaut.sql:micronaut-hibernate-jpa:4.2.2'
    implementation 'io.micronaut.sql:micronaut-jdbc-hikari:4.2.2'
    runtimeOnly 'org.postgresql:postgresql:42.3.1'

    //jakarta
    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.0'
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'

    //logging
    implementation 'org.fusesource.jansi:jansi:2.4.0'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.10'

    //testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation 'io.micronaut.test:micronaut-test-junit5:3.1.1'
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"

    //lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    //dto mapping
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    //openapi
    implementation 'io.swagger.core.v3:swagger-annotations'
    annotationProcessor 'io.micronaut.openapi:micronaut-openapi:4.0.1'

    //tracing
    runtimeOnly 'io.jaegertracing:jaeger-thrift'
    implementation 'io.micronaut:micronaut-tracing'
    implementation 'io.micronaut.tracing:micronaut-tracing-jaeger'
    implementation 'io.micronaut.tracing:micronaut-tracing-core:4.1.1'
}


application {
    mainClass.set("com.stakkato95.freelance.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.stakkato95.freelance.*")
    }
}


